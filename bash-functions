#!/bin/bash

__awsenv-get-metadata() {
    local __outvar="${1}"
    local key="${2}"

    value=$(curl -s http://169.254.169.254/latest/meta-data/${key})
    eval $__outvar="${value}"
}

__awsenv-log() {
	if [ -n "${AWS_VERBOSE}" ]; then
		echo "$@"
	fi
}

__awsenv-log-printf() {
	if [ -n "${AWS_VERBOSE}" ]; then
		format="${1}\n"
		shift
		printf "${format}" $@
	fi
}

__awsenv-failmsg() {
	local message="${1}"
	echo "${0}: $message"
}

__awsenv-export() {
	__awsenv-log "Exporting: ${1}=${2}"
	export ${1}="${2}"
}

__awsenv-get-env-var() {
	local __outvar="${1}"
	local env_var_name="${2}"
	local default_value="${3}"

	eval var_value=\$$env_var_name
	if [ -n "${var_value}" ]; then
		eval $__outvar="${var_value}"
	else
		eval $__outvar="${default_value}"
	fi
}

__awsenv-require-env-var() {
	local var_name="${1}"
	local var_value

	eval var_value=\$$var_name

	if [ -z "${var_value}" ]; then
		__awsenv-failmsg "Required environment variable \"${var_name}\" is not defined."
		return 1
	fi
}

__awsenv-require-file() {
	local filename="${1}"

	if [ ! -e "${filename}" ]; then
		__awsenv-failmsg "Required file does not exist: \"${filename}\""
		return 1
	elif [ ! -r "${filename}" ]; then
		__awsenv-failmsg "Required file exists but is not readable: \"${filename}\""
		return 1
	fi
}

__awsenv-require-bitmask() {
	local filename="${1}"
	local required_bitmask="${2}"
	local file_mode
	local leftover_bits

	__awsenv-require-file "$filename" || return 1

	file_mode=$(stat -f '0%OLp' ${filename})
	leftover_bits=$(( ${file_mode} & ${required_bitmask} ))
	
	__awsenv-log "Checking bitmask for file ${filename}"
	__awsenv-log "Required bitmask: ${required_bitmask}"
	__awsenv-log-printf "Actual mode: %04o" ${file_mode}
	__awsenv-log-printf "Leftover bits: %04o" ${leftover_bits}

	if [ $leftover_bits -ne 0 ]; then
		echo "ERROR: The following file has insecure permissions!"
		echo "  ${filename}"
		echo "This file must not be readable by the group/world."
        echo
		echo "Try 'chmod 0600 ${filename}'"
        return 1
	fi
}

__awsenv-update-region-cache() {
	AWS_DEFAULT_REGION=us-east-1 aws ec2 describe-regions \
		--output text | cut -f3 > "${HOME}/.aws/regions"

	if [ $? -ne 0 ]; then
		rm "${HOME}/.aws/regions"
	fi
}

